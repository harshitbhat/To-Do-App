{"version":3,"sources":["Hooks/useToggleState.js","Hooks/useInputState.js","Components/EditTodoForm/EditTodoForm.jsx","Components/TodoItem/TodoItem.jsx","Components/TodoList/TodoList.jsx","Components/TodoForm/TodoForm.jsx","Components/TodoApp/TodoApp.jsx","Hooks/useTodoState.js","App.js","reportWebVitals.js","index.js"],"names":["useToggleState","initVal","useState","state","setState","toggle","useInputState","initialVal","value","setValue","event","target","EditTodoForm","task","id","editTodo","handleChange","reset","onSubmit","e","preventDefault","style","marginLeft","width","TextField","margin","onChange","fullWidth","autoFocus","TodoItem","completed","removeTodo","toggleTodo","isEditing","ListItem","height","Checkbox","tabIndex","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","length","Paper","elevation","List","map","todo","idx","uuid","Divider","TodoForm","addTodo","handleValueChange","padding","label","TodoApp","initialTodos","setTodos","newTodoText","todoId","filter","newTask","useTodoState","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","backgroundColor","AppBar","color","position","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a16ea2ab.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction useToggleState(initVal = false) {\n  // call use state, reserve piece of state\n  const [state, setState] = useState(initVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  return [state, toggle];\n}\nexport default useToggleState;\n","import { useState } from 'react';\n\nconst useInputState = (initialVal) => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  const reset = () => {\n    setValue('');\n  };\n  return [value, handleChange, reset];\n};\n\nexport default useInputState;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport useInputState from '../../Hooks/useInputState';\n\nfunction EditTodoForm({ task, id, editTodo, toggle }) {\n  const [value, handleChange, reset] = useInputState(task);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        editTodo(id, value);\n        reset();\n        toggle();\n      }}\n      style={{\n        marginLeft: '1rem',\n        width: '100%',\n      }}\n    >\n      <TextField\n        margin=\"normal\"\n        value={value}\n        onChange={handleChange}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n}\n\nexport default EditTodoForm;\n","import React from 'react';\nimport useToggleState from '../../Hooks/useToggleState';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport EditTodoForm from '../EditTodoForm/EditTodoForm';\n\nexport default function TodoItem({\n  id,\n  task,\n  completed,\n  removeTodo,\n  toggleTodo,\n  editTodo,\n}) {\n  const [isEditing, toggle] = useToggleState(false);\n  return (\n    <ListItem style={{ height: '64px' }}>\n      {isEditing ? (\n        <EditTodoForm task={task} id={id} editTodo={editTodo} toggle={toggle} />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => toggleTodo(id)}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? 'line-through' : 'none' }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\n              <EditIcon />\n            </IconButton>\n            <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { v4 as uuid } from 'uuid';\n\nexport default function TodoList({ todos, removeTodo, toggleTodo, editTodo }) {\n  if (todos.length) {\n    return (\n      <Paper elevation={5}>\n        <List>\n          {todos.map((todo, idx) => (\n            <>\n              <TodoItem\n                task={todo.task}\n                key={uuid()}\n                id={todo.id}\n                completed={todo.completed}\n                removeTodo={removeTodo}\n                toggleTodo={toggleTodo}\n                editTodo={editTodo}\n              />\n              {idx !== todos.length - 1 && <Divider />}\n            </>\n          ))}\n        </List>\n      </Paper>\n    );\n  } else {\n    return null;\n  }\n}\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport useInputState from '../../Hooks/useInputState';\n\nexport default function TodoForm({ addTodo }) {\n  const [value, handleValueChange, reset] = useInputState('');\n  return (\n    <Paper\n      style={{\n        margin: '1rem 0',\n        padding: '0 1rem',\n      }}\n    >\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          addTodo(value);\n          reset();\n        }}\n      >\n        <TextField\n          value={value}\n          onChange={handleValueChange}\n          margin=\"normal\"\n          label=\"Add new task\"\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/ToolBar';\nimport Grid from '@material-ui/core/Grid';\nimport TodoList from '../TodoList/TodoList';\nimport TodoForm from '../TodoForm/TodoForm';\nimport useTodoState from '../../Hooks/useTodoState';\n\nexport default function TodoApp() {\n  const initialTodos = JSON.parse(window.localStorage.getItem('todos') || '[]');\n  const { todos, addTodo, removeTodo, toggleTodo, editTodo } =\n    useTodoState(initialTodos);\n\n  useEffect(() => {\n    window.localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <Paper\n      style={{\n        padding: '0',\n        margin: '0',\n        height: '100vh',\n        backgroundColor: '#f1faee',\n      }}\n      elevation={0}\n    >\n      <AppBar\n        color=\"primary\"\n        position=\"static\"\n        style={{ height: '64px' }}\n        elevation={10}\n      >\n        <ToolBar>\n          <Typography color=\"inherit\">Todo App</Typography>\n        </ToolBar>\n      </AppBar>\n      <Grid container justify=\"center\" style={{ marginTop: '1rem' }}>\n        <Grid item xs={11} md={8} lg={4}>\n          <TodoForm addTodo={addTodo} />\n          <TodoList\n            todos={todos}\n            removeTodo={removeTodo}\n            toggleTodo={toggleTodo}\n            editTodo={editTodo}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\n/*\nTodoApp\n    - TodoForm\n    - TodoList\n        - TodoItem\n*/\n","import { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nexport default (initialTodos) => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  return {\n    todos,\n    addTodo: (newTodoText) => {\n      setTodos([...todos, { id: uuid(), task: newTodoText, completed: false }]);\n    },\n    removeTodo: (todoId) => {\n      setTodos(todos.filter((todo) => todo.id !== todoId));\n    },\n    toggleTodo: (todoId) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n        )\n      );\n    },\n    editTodo: (todoId, newTask) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === todoId ? { ...todo, task: newTask } : todo\n        )\n      );\n    },\n  };\n};\n","import TodoApp from './Components/TodoApp/TodoApp';\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}